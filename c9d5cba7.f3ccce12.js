(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{164:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return o})),r.d(t,"metadata",(function(){return c})),r.d(t,"rightToc",(function(){return l})),r.d(t,"default",(function(){return p}));var a=r(2),n=r(9),i=(r(0),r(170)),o={id:"data-sources",title:"Data Sources",sidebar_label:"Data Sources"},c={id:"data-sources",title:"Data Sources",description:"When constructing the `Query` resolver tree, Kimera accepts multiple data sources which are used to generate data for a specific field.",source:"@site/docs/data-sources.md",permalink:"/graphql-kimera/docs/data-sources",editUrl:"https://github.com/lola-tech/graphql-kimera/edit/master/website/docs/data-sources.md",sidebar_label:"Data Sources",sidebar:"someSidebar",previous:{title:"Plans for the future",permalink:"/graphql-kimera/docs/todo"},next:{title:"Scenario",permalink:"/graphql-kimera/docs/scenarios"}},l=[],s={rightToc:l};function p(e){var t=e.components,r=Object(n.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},s,r,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"When constructing the ",Object(i.b)("inlineCode",{parentName:"p"},"Query")," resolver tree, Kimera accepts multiple data sources which are used to generate data for a specific field."),Object(i.b)("p",null,"The data sources have different priorities: a field found in a ",Object(i.b)("strong",{parentName:"p"},"higher priority")," data source will never be overwritten by a conflicting field found in a ",Object(i.b)("strong",{parentName:"p"},"lower priority")," source."),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"/graphql-kimera/docs/scenarios"}),"Scenario")," (Hightest Priority): An object that frugally mirrors the ",Object(i.b)("inlineCode",{parentName:"li"},"Query")," response structure. This is used to target fields from query responses and set them to specific values or, when the field type is an ",Object(i.b)("inlineCode",{parentName:"li"},"array"),", it allows us to also set the ",Object(i.b)("inlineCode",{parentName:"li"},"length")," of the response ",Object(i.b)("inlineCode",{parentName:"li"},"array"),"."),Object(i.b)("li",{parentName:"ol"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"/graphql-kimera/docs/object-type-builders"}),"Object Type Builders"),": A function that returns an object with values that need to be used when generating data ",Object(i.b)("strong",{parentName:"li"},"for a ",Object(i.b)("a",Object(a.a)({parentName:"strong"},{href:"https://graphql.org/learn/schema/#object-types-and-fields"}),"GraphQL Object Type")," field"),". Think of having a ",Object(i.b)("inlineCode",{parentName:"li"},"Persona")," type, and wanting the ",Object(i.b)("inlineCode",{parentName:"li"},"name")," field of it to be always generated using ",Object(i.b)("inlineCode",{parentName:"li"},"casual.full_name"),"."),Object(i.b)("li",{parentName:"ol"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"/graphql-kimera/docs/field-name-builders"}),"Field Name Builders"),": A value that needs to be used when generating data ",Object(i.b)("strong",{parentName:"li"},"for a field with a specific name"),", no matter what type it will be found in. Think of wanting the field ",Object(i.b)("inlineCode",{parentName:"li"},"city")," to be generated using ",Object(i.b)("inlineCode",{parentName:"li"},"casual.city")," wether it is part of an ",Object(i.b)("inlineCode",{parentName:"li"},"Address")," type."),Object(i.b)("li",{parentName:"ol"},Object(i.b)("a",Object(a.a)({parentName:"li"},{href:"/graphql-kimera/docs/scalar-type-builders"}),"Scalar Type Builders")," (Lowest priority): A value that needs to be used when generating data ",Object(i.b)("strong",{parentName:"li"},"for a Scalar Type Field"),", be it built into GraphQL (",Object(i.b)("inlineCode",{parentName:"li"},"ID"),", ",Object(i.b)("inlineCode",{parentName:"li"},"String"),", ",Object(i.b)("inlineCode",{parentName:"li"},"Int"),", ",Object(i.b)("inlineCode",{parentName:"li"},"Float"),", ",Object(i.b)("inlineCode",{parentName:"li"},"Boolean"),"), or customly defined in our schema.")))}p.isMDXComponent=!0},170:function(e,t,r){"use strict";r.d(t,"a",(function(){return b})),r.d(t,"b",(function(){return f}));var a=r(0),n=r.n(a);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=n.a.createContext({}),p=function(e){var t=n.a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):c({},t,{},e)),r},b=function(e){var t=p(e.components);return n.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},d=Object(a.forwardRef)((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),b=p(r),d=a,f=b["".concat(o,".").concat(d)]||b[d]||u[d]||i;return r?n.a.createElement(f,c({ref:t},s,{components:r})):n.a.createElement(f,c({ref:t},s))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var s=2;s<i;s++)o[s]=r[s];return n.a.createElement.apply(null,o)}return n.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"}}]);