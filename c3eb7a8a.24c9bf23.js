(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{164:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return u}));var r=n(2),a=n(9),i=(n(0),n(178)),c={id:"mocking-types",title:"First Builder",sidebar_label:"Mocking Types"},o={id:"mocking-types",title:"First Builder",description:"Creating the first Object Type Builder",source:"@site/docs/mocking-types.md",permalink:"/graphql-kimera/docs/mocking-types",editUrl:"https://github.com/lola-tech/graphql-kimera/edit/master/website/docs/mocking-types.md",sidebar_label:"Mocking Types",sidebar:"docs",previous:{title:"The Scenario",permalink:"/graphql-kimera/docs/introducing-scenario"},next:{title:"Array Fields",permalink:"/graphql-kimera/docs/mocking-list-types"}},l=[],p={rightToc:l};function u(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Creating the first Object Type Builder"),Object(i.b)("p",null,"As you remember from the previous section, running a ",Object(i.b)("inlineCode",{parentName:"p"},"city")," query will return randomly generated data:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-json"}),'{\n  "data": {\n    "city": {\n      "id": "irg5btv90",\n      "name": "GENERATED_STRING",\n      "population": 695\n    }\n  }\n}\n')),Object(i.b)("p",null,"At this point we may realize that we'd prefer having an actual city instead of an unappealing ",Object(i.b)("inlineCode",{parentName:"p"},"GENERATED_STRING")," for its name. That means it's time to use our first builder."),Object(i.b)("p",null,"Since ",Object(i.b)("inlineCode",{parentName:"p"},"name")," is a pretty common field name, there's no point in writing a ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"/graphql-kimera/docs/field-name-builder"}),"Field Name Builder"),". What we want is to set the field in the context of the ",Object(i.b)("inlineCode",{parentName:"p"},"City")," type. For that, we'll use an ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"/graphql-kimera/docs/object-type-builder"}),"Object Type Builder"),"."),Object(i.b)("p",null,"First, lets install a fake data generator library. For this tutorial, we'll use ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/boo1ean/casual"}),"casual"),": ",Object(i.b)("inlineCode",{parentName:"p"},"yarn add casual"),"."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),'// ...\nconst typeBuilders = {\n  ["City"]: () => ({\n    name: casual.city,\n  }),\n};\n\nfunction getDefaultDataSources() {\n  return {\n    typeBuilders,\n  };\n}\n\nconst executableSchema = getExecutableSchema(typeDefs, getDefaultDataSources);\n// ...\n')),Object(i.b)("p",null,"Re-runing the query will return an actual fake city for the ",Object(i.b)("inlineCode",{parentName:"p"},"name")," field."),Object(i.b)("p",null,"Links:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Read more on ",Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"/graphql-kimera/docs/get-executable-schema#getdefaultdatasourcescontext"}),"how ",Object(i.b)("inlineCode",{parentName:"a"},"getDefaultDataSources")," works"),"."),Object(i.b)("li",{parentName:"ul"},"Read more on ",Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"/graphql-kimera/docs/object-type-builders"}),"how Object Type Builders work"),".")))}u.isMDXComponent=!0},178:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return d}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=a.a.createContext({}),u=function(e){var t=a.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o({},t,{},e)),n},b=function(e){var t=u(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),b=u(n),m=r,d=b["".concat(c,".").concat(m)]||b[m]||s[m]||i;return n?a.a.createElement(d,o({ref:t},p,{components:n})):a.a.createElement(d,o({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,c=new Array(i);c[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,c[1]=o;for(var p=2;p<i;p++)c[p]=n[p];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);