(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{161:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return c})),r.d(t,"metadata",(function(){return o})),r.d(t,"rightToc",(function(){return l})),r.d(t,"default",(function(){return p}));var n=r(2),a=r(9),i=(r(0),r(178)),c={id:"tutorial-first-builder",title:"First Builder",sidebar_label:"2. First Builder"},o={id:"tutorial-first-builder",title:"First Builder",description:"Creating the first Object Type Builder",source:"@site/docs/tutorial-first-builder.md",permalink:"/graphql-kimera/docs/tutorial-first-builder",editUrl:"https://github.com/lola-tech/graphql-kimera/edit/master/website/docs/tutorial-first-builder.md",sidebar_label:"2. First Builder"},l=[],u={rightToc:l};function p(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},u,r,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Creating the first Object Type Builder"),Object(i.b)("p",null,"As you remember from the previous section, running a ",Object(i.b)("inlineCode",{parentName:"p"},"city")," query will return randomly generated data:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-json"}),'{\n  "data": {\n    "city": {\n      "id": "irg5btv90",\n      "name": "GENERATED_STRING",\n      "population": 695\n    }\n  }\n}\n')),Object(i.b)("p",null,"At this point we may realize that we'd prefer having an actual city instead of an unappealing ",Object(i.b)("inlineCode",{parentName:"p"},"GENERATED_STRING")," for its name. That means it's time to use our first builder."),Object(i.b)("p",null,"Since ",Object(i.b)("inlineCode",{parentName:"p"},"name")," is a pretty common field name, there's no point in writing a ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/graphql-kimera/docs/field-name-builder"}),"Field Name Builder"),". What we want is to set the field in the context of the ",Object(i.b)("inlineCode",{parentName:"p"},"City")," type. For that, we'll use an ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/graphql-kimera/docs/object-type-builder"}),"Object Type Builder"),"."),Object(i.b)("p",null,"First, lets install a fake data generator library. For this tutorial, we'll use ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/boo1ean/casual"}),"casual"),": ",Object(i.b)("inlineCode",{parentName:"p"},"yarn add casual"),"."),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),"// ...\nconst typeBuilders = {\n  ['City']: () => ({\n    name: casual.city,\n  }),\n};\n\nfunction getDefaultDataSources() {\n  return {\n    typeBuilders,\n  };\n}\n\nconst executableSchema = getExecutableSchema(typeDefs, getDefaultDataSources);\n// ...\n")),Object(i.b)("p",null,"Re-runing the query will return an actual fake city for the ",Object(i.b)("inlineCode",{parentName:"p"},"name")," field."),Object(i.b)("p",null,"Links:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Read more on ",Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"/graphql-kimera/docs/get-executable-schema#getdefaultdatasourcescontext"}),"how ",Object(i.b)("inlineCode",{parentName:"a"},"getDefaultDataSources")," works"),"."),Object(i.b)("li",{parentName:"ul"},"Read more on ",Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"/graphql-kimera/docs/object-type-builders"}),"how Object Type Builders work"),".")))}p.isMDXComponent=!0},178:function(e,t,r){"use strict";r.d(t,"a",(function(){return b})),r.d(t,"b",(function(){return m}));var n=r(0),a=r.n(n);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=a.a.createContext({}),p=function(e){var t=a.a.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):o({},t,{},e)),r},b=function(e){var t=p(e.components);return a.a.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=Object(n.forwardRef)((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),b=p(r),d=n,m=b["".concat(c,".").concat(d)]||b[d]||s[d]||i;return r?a.a.createElement(m,o({ref:t},u,{components:r})):a.a.createElement(m,o({ref:t},u))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,c=new Array(i);c[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:n,c[1]=o;for(var u=2;u<i;u++)c[u]=r[u];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"}}]);